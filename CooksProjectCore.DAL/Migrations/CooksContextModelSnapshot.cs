// <auto-generated />
using System;
using CooksProjectCore.DAL.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CooksProjectCore.DAL.Migrations
{
    [DbContext(typeof(CooksContext))]
    partial class CooksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.Comment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<Guid>("FoodID");

                    b.Property<Guid>("ParentCommentID");

                    b.Property<string>("Text");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("FoodID");

                    b.HasIndex("ParentCommentID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.FollowTable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FollowID");

                    b.Property<int>("FollowerID");

                    b.HasKey("ID");

                    b.ToTable("FollowTables");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.Food", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("FoodType");

                    b.Property<string>("ImageUrl");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Recipe");

                    b.Property<int?>("TotalComments");

                    b.Property<int?>("TotalLikes");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.FoodEquipment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentName");

                    b.Property<Guid>("FoodID");

                    b.HasKey("ID");

                    b.HasIndex("FoodID");

                    b.ToTable("FoodEquipments");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.Like", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("FoodID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Facebook");

                    b.Property<string>("Instagram");

                    b.Property<string>("Linkedln");

                    b.Property<string>("Twitter");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Email");

                    b.Property<string>("ImageLocation");

                    b.Property<string>("Job");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Surname");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.Comment", b =>
                {
                    b.HasOne("CooksProjectCore.Entities.Concrete.Food", "Food")
                        .WithMany("Comments")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CooksProjectCore.Entities.Concrete.Comment", "ParentComment")
                        .WithMany("CommentReplies")
                        .HasForeignKey("ParentCommentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CooksProjectCore.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.Food", b =>
                {
                    b.HasOne("CooksProjectCore.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.FoodEquipment", b =>
                {
                    b.HasOne("CooksProjectCore.Entities.Concrete.Food")
                        .WithMany("FoodEquipments")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CooksProjectCore.Entities.Concrete.SocialMedia", b =>
                {
                    b.HasOne("CooksProjectCore.Entities.Concrete.User")
                        .WithOne("SocialMedia")
                        .HasForeignKey("CooksProjectCore.Entities.Concrete.SocialMedia", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
